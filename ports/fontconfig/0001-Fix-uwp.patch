diff --git a/src/fccache.c b/src/fccache.c
index 02ec301..7d057c7 100644
--- a/src/fccache.c
+++ b/src/fccache.c
@@ -700,6 +700,8 @@ FcDirCacheMapFd (FcConfig *config, int fd, struct stat *fd_stat, struct stat *di
 	    cache = NULL;
 #elif defined(_WIN32)
 	{
+#if !defined(WINAPI_FAMILY) || (WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)
+
 	    HANDLE hFileMap;
 
 	    cache = NULL;
@@ -711,6 +713,7 @@ FcDirCacheMapFd (FcConfig *config, int fd, struct stat *fd_stat, struct stat *di
 				       fd_stat->st_size);
 		CloseHandle (hFileMap);
 	    }
+#endif
 	}
 #endif
     }
diff --git a/src/fcdefault.c b/src/fcdefault.c
index 6647a8f..f7e2209 100644
--- a/src/fcdefault.c
+++ b/src/fcdefault.c
@@ -116,7 +116,12 @@ retry:
     if (!prgname)
     {
 #ifdef _WIN32
-	char buf[MAX_PATH+1];
+    char buf[MAX_PATH + 1];
+
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY != WINAPI_FAMILY_DESKTOP_APP)
+    // FIXME
+    strcpy(prgname, "Windows 10 UWP App");
+#else
 
 	/* TODO This is ASCII-only; fix it. */
 	if (GetModuleFileNameA (GetModuleHandle (NULL), buf, sizeof (buf) / sizeof (buf[0])) > 0)
@@ -140,6 +145,7 @@ retry:
 
 	    prgname = FcStrdup (p);
 	}
+#endif
 #elif defined (HAVE_GETPROGNAME)
 	const char *q = getprogname ();
 	if (q)
diff --git a/src/fcformat.c b/src/fcformat.c
index 59f8681..4a74a4d 100644
--- a/src/fcformat.c
+++ b/src/fcformat.c
@@ -271,7 +271,7 @@ interpret_builtin (FcFormatContext *c,
 		   FcPattern       *pat,
 		   FcStrBuf        *buf)
 {
-    FcChar8       *new_str;
+    FcChar8       *new_str = NULL;
     FcBool         ret;
 
     if (!expect_char (c, '=') ||
@@ -981,7 +981,7 @@ interpret_convert (FcFormatContext *c,
 		   int              start)
 {
     const FcChar8 *str;
-    FcChar8       *new_str;
+    FcChar8       *new_str = NULL;
     FcStrBuf       new_buf;
     FcChar8        buf_static[8192];
     FcBool         ret;
diff --git a/src/fcint.h b/src/fcint.h
index ac911ad..9b85dac 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -70,6 +70,10 @@ extern pfnSHGetFolderPathA pSHGetFolderPathA;
 #  define FC_DIR_SEPARATOR_S       "/"
 #endif
 
+#if defined(WINAPI_FAMILY) || (WINAPI_FAMILY != WINAPI_FAMILY_DESKTOP_APP)
+#define getenv(x) NULL
+#endif
+
 #if __GNUC__ >= 4
 #define FC_UNUSED	__attribute__((unused))
 #else
diff --git a/src/fcxml.c b/src/fcxml.c
index 031a7da..961c1dd 100644
--- a/src/fcxml.c
+++ b/src/fcxml.c
@@ -2105,6 +2105,8 @@ FcParseDir (FcConfigParse *parse)
 	data = prefix;
     }
 #ifdef _WIN32
+#if !defined(WINAPI_FAMILY) || (WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)
+
     if (strcmp ((const char *) data, "CUSTOMFONTDIR") == 0)
     {
 	FcChar8 *p;
@@ -2152,6 +2154,7 @@ FcParseDir (FcConfigParse *parse)
 	strcat ((char *) data, "fonts");
     }
 #endif
+#endif
     if (strlen ((char *) data) == 0)
 	FcConfigMessage (parse, FcSevereWarning, "empty font directory name ignored");
     else if (!FcStrUsesHome (data) || FcConfigHome ())
@@ -3244,7 +3247,10 @@ FcConfigParseAndLoad (FcConfig	    *config,
     void	    *buf;
 #endif
 
-#ifdef _WIN32
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY != WINAPI_FAMILY_DESKTOP_APP)
+    pGetSystemWindowsDirectory = NULL;
+    pSHGetFolderPathA = NULL;
+#elif defined( _WIN32)
     if (!pGetSystemWindowsDirectory)
     {
         HMODULE hk32 = GetModuleHandleA("kernel32.dll");
