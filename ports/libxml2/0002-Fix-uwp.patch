diff --git a/catalog.c b/catalog.c
index 6dfdfbb..48cd049 100644
--- a/catalog.c
+++ b/catalog.c
@@ -52,6 +52,10 @@
 # define PATH_SEPARATOR ':'
 #endif
 
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY != WINAPI_FAMILY_DESKTOP_APP)
+#include <Windows.h>
+#endif
+
 /**
  * TODO:
  *
@@ -3105,6 +3109,8 @@ xmlInitializeCatalog(void) {
     if (xmlCatalogInitialized != 0)
 	return;
 
+    void* hmodule = NULL;
+
     xmlInitializeCatalogData();
     xmlRMutexLock(xmlCatalogMutex);
 
@@ -3122,10 +3128,13 @@ xmlInitializeCatalog(void) {
 	if (catalogs == NULL)
 #if defined(_WIN32) && defined(_MSC_VER)
     {
-		void* hmodule;
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY != WINAPI_FAMILY_DESKTOP_APP)
+		hmodule = LoadPackagedLibrary(L"libxml2.dll", NULL);
+#else
 		hmodule = GetModuleHandleA("libxml2.dll");
 		if (hmodule == NULL)
 			hmodule = GetModuleHandleA(NULL);
+#endif
 		if (hmodule != NULL) {
 			char buf[256];
 			unsigned long len = GetModuleFileNameA(hmodule, buf, 255);
@@ -3179,6 +3188,10 @@ xmlInitializeCatalog(void) {
     }
 
     xmlRMutexUnlock(xmlCatalogMutex);
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY != WINAPI_FAMILY_DESKTOP_APP)
+	if (hmodule)
+		FreeLibrary(hmodule);
+#endif
 }
 
 
diff --git a/include/libxml/xmlversion.h b/include/libxml/xmlversion.h
index 59ba74f..b181342 100644
--- a/include/libxml/xmlversion.h
+++ b/include/libxml/xmlversion.h
@@ -50,7 +50,7 @@ XMLPUBFUN void XMLCALL xmlCheckVersion(int version);
  *
  * extra version information, used to show a CVS compilation
  */
-#define LIBXML_VERSION_EXTRA "-GITCVE-2016-1834-21-g502f6a6"
+#define LIBXML_VERSION_EXTRA ""
 
 /**
  * LIBXML_TEST_VERSION:
@@ -291,7 +291,7 @@ XMLPUBFUN void XMLCALL xmlCheckVersion(int version);
  *
  * Whether ISO-8859-* support is made available in case iconv is not
  */
-#if 1
+#if 0
 #define LIBXML_ISO8859X_ENABLED
 #endif
 
@@ -388,7 +388,7 @@ XMLPUBFUN void XMLCALL xmlCheckVersion(int version);
  *
  * the string suffix used by dynamic modules (usually shared libraries)
  */
-#define LIBXML_MODULE_EXTENSION ".so" 
+#define LIBXML_MODULE_EXTENSION ".dll" 
 #endif
 
 /**
@@ -405,7 +405,7 @@ XMLPUBFUN void XMLCALL xmlCheckVersion(int version);
  *
  * Whether the Lzma support is compiled in
  */
-#if 1
+#if 0
 #define LIBXML_LZMA_ENABLED
 #endif
 
diff --git a/libxml.h b/libxml.h
index 88e515f..c92377b 100644
--- a/libxml.h
+++ b/libxml.h
@@ -40,6 +40,11 @@
 #include <libxml/xmlversion.h>
 #endif
 
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY != WINAPI_FAMILY_DESKTOP_APP)
+#define getenv(x) NULL
+#define GetVersionEx(x) FALSE
+#endif
+
 #if defined(__Lynx__)
 #include <stdio.h> /* pull definition of size_t */
 #include <varargs.h>
diff --git a/win32/Makefile.msvc b/win32/Makefile.msvc
index 3e41226..d68080f 100644
--- a/win32/Makefile.msvc
+++ b/win32/Makefile.msvc
@@ -41,9 +41,14 @@ CPPFLAGS = /nologo /I$(XML_SRCDIR)\include /D "NOLIBTOOL"
 CPPFLAGS = $(CPPFLAGS) /D "_REENTRANT"
 !endif
 
+!if "$(BUILD_UWP)" == "1"
+CPPFLAGS = $(CPPFLAGS) /MP /GS /GL /analyze- /W3 /Gy /Zc:wchar_t /ZW:nostdlib /Zi /Gm- /O2 /sdl /Zc:inline /fp:precise /D "_WINDLL" /D "_UNICODE" /D "UNICODE" /D "WINAPI_FAMILY=WINAPI_FAMILY_APP" /D "__WRL_NO_DEFAULT_LIB__" /errorReport:prompt /WX- /Zc:forScope /Gd /Oy- /FU"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\lib\store\references\platform.winmd" /Oi /MD /EHsc
+CFLAGS = $(CFLAGS)  /D "WINAPI_FAMILY=WINAPI_FAMILY_APP"
+!endif
+
 # The compiler and its options.
 CC = cl.exe
-CFLAGS = /nologo /D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "NOLIBTOOL" /W1 $(CRUNTIME)
+CFLAGS = $(CFLAGS) /nologo /D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "NOLIBTOOL" /W1 $(CRUNTIME)
 CFLAGS = $(CFLAGS) /I$(XML_SRCDIR) /I$(XML_SRCDIR)\include /I$(INCPREFIX)
 !if "$(WITH_THREADS)" != "no"
 CFLAGS = $(CFLAGS) /D "_REENTRANT"
@@ -67,6 +72,11 @@ CFLAGS = $(CFLAGS) /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE
 LD = link.exe
 LDFLAGS = /nologo /VERSION:$(LIBXML_MAJOR_VERSION).$(LIBXML_MINOR_VERSION)
 LDFLAGS = $(LDFLAGS) /LIBPATH:$(BINDIR) /LIBPATH:$(LIBPREFIX)
+
+!if "$(BUILD_UWP)" == "1"
+LDFLAGS = $(LDFLAGS) /DYNAMICBASE "WindowsApp.lib" /APPCONTAINER /SUBSYSTEM:CONSOLE /ERRORREPORT:PROMPT
+!endif
+
 LIBS =
 !if "$(WITH_FTP)" == "1" || "$(WITH_HTTP)" == "1"
 LIBS = $(LIBS) wsock32.lib ws2_32.lib
diff --git a/win32/configure.js b/win32/configure.js
index 92b9ba0..eece334 100644
--- a/win32/configure.js
+++ b/win32/configure.js
@@ -68,6 +68,7 @@ var compiler = "msvc";
 var cruntime = "/MD";
 var dynruntime = true;
 var vcmanifest = false;
+var buildUWP = 0;
 var buildDebug = 0;
 var buildStatic = 0;
 var buildPrefix = ".";
@@ -153,6 +154,7 @@ function usage()
 	txt += "  cruntime:   C-runtime compiler option (only msvc) (" + cruntime + ")\n";
 	txt += "  dynruntime: Use the dynamic RTL (only bcb) (" + dynruntime + ")\n";
 	txt += "  vcmanifest: Embed VC manifest (only msvc) (" + (vcmanifest? "yes" : "no") + ")\n";
+	txt += "  uwp:        Build Win10 UWP executables (" + (buildUWP? "yes" : "no")  + ")\n";
 	txt += "  debug:      Build unoptimised debug executables (" + (buildDebug? "yes" : "no")  + ")\n";
 	txt += "  static:     Link xmllint statically to libxml2 (" + (buildStatic? "yes" : "no")  + ")\n";
 	txt += "              Note: automatically enabled if cruntime is not /MD or /MDd\n";
@@ -259,6 +261,7 @@ function discoverVersion()
 	vf.WriteLine("WITH_LEGACY=" + (withLegacy? "1" : "0"));
 	vf.WriteLine("WITH_OUTPUT=" + (withOutput? "1" : "0"));
 	vf.WriteLine("WITH_PYTHON=" + (withPython? "1" : "0"));
+	vf.WriteLine("BUILD_UWP=" + (buildUWP? "1" : "0"));
 	vf.WriteLine("DEBUG=" + (buildDebug? "1" : "0"));
 	vf.WriteLine("STATIC=" + (buildStatic? "1" : "0"));
 	vf.WriteLine("PREFIX=" + buildPrefix);
@@ -526,6 +529,8 @@ for (i = 0; (i < WScript.Arguments.length) && (error == 0); i++) {
 			dynruntime = strToBool(arg.substring(opt.length + 1, arg.length));
 		else if (opt == "vcmanifest")
 			vcmanifest = strToBool(arg.substring(opt.length + 1, arg.length));
+		else if (opt == "buildUWP")
+			buildUWP = strToBool(arg.substring(opt.length + 1, arg.length));		
 		else if (opt == "debug")
 			buildDebug = strToBool(arg.substring(opt.length + 1, arg.length));
 		else if (opt == "static")
@@ -693,6 +698,7 @@ if (compiler == "msvc") {
 	txtOut += "    Embed Manifest: " + boolToStr(vcmanifest) + "\n";
 } else if (compiler == "bcb")
 	txtOut += "   Use dynamic RTL: " + dynruntime + "\n";
+txtOut += "         Build UWP: " + boolToStr(buildUWP) + "\n";
 txtOut += "     Debug symbols: " + boolToStr(buildDebug) + "\n";
 txtOut += "    Static xmllint: " + boolToStr(buildStatic) + "\n";
 txtOut += "    Install prefix: " + buildPrefix + "\n";
diff --git a/xmlmodule.c b/xmlmodule.c
index 50ed666..78dd221 100644
--- a/xmlmodule.c
+++ b/xmlmodule.c
@@ -308,7 +308,20 @@ xmlModulePlatformSymbol(void *handle, const char *name, void **symbol)
 static void *
 xmlModulePlatformOpen(const char *name)
 {
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY != WINAPI_FAMILY_DESKTOP_APP)
+	if (!name)
+		return NULL;
+	int length = strlen(name);
+	int wLength = MultiByteToWideChar(CP_ACP, 0, name, length, NULL, 0);
+	wchar_t* wName = malloc((wLength + 1) * sizeof(wchar_t));
+	MultiByteToWideChar(CP_ACP, 0, name, length, wName, wLength);
+	wName[wLength] = 0;
+	LoadPackagedLibrary(wName, NULL);
+	if(wName)
+		free(wName);
+#else
     return LoadLibraryA(name);
+#endif
 }
 
 /*
