diff --git a/win32/Makefile.msvc b/win32/Makefile.msvc
index b1fa754..9a5b5ee 100644
--- a/win32/Makefile.msvc
+++ b/win32/Makefile.msvc
@@ -49,6 +49,10 @@ UTILS_INTDIR = $(OUTDIR)\int.utils.msvc
 CPP = cl.exe /EP
 CPPFLAGS = /nologo
 
+!if "$(BUILD_UWP)" == "1"
+CPPFLAGS = $(CPPFLAGS) /MP /GS /GL /analyze- /W3 /Gy /Zc:wchar_t /ZW:nostdlib /Zi /Gm- /O2 /sdl /Zc:inline /fp:precise /D "_WINDLL" /D "_UNICODE" /D "UNICODE" /D "WINAPI_FAMILY=WINAPI_FAMILY_APP" /D "__WRL_NO_DEFAULT_LIB__" /errorReport:prompt /WX- /Zc:forScope /Gd /Oy- /FU"C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\lib\store\references\platform.winmd" /Oi /MD /EHsc
+!endif
+
 # The compiler and its options.
 CC = cl.exe
 CFLAGS = /nologo /D "WIN32" /D "_WINDOWS" /D "_MBCS" /W3 $(CRUNTIME) /D "_REENTRANT"
@@ -59,6 +63,11 @@ CFLAGS = $(CFLAGS) /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE
 LD = link.exe
 LDFLAGS = /nologo
 LDFLAGS = $(LDFLAGS) /LIBPATH:$(BINDIR) /LIBPATH:$(LIBPREFIX)
+
+!if "$(BUILD_UWP)" == "1"
+LDFLAGS = $(LDFLAGS) /DYNAMICBASE "WindowsApp.lib" /APPCONTAINER /SUBSYSTEM:CONSOLE /ERRORREPORT:PROMPT
+!endif
+
 # The libraries are needed for static builds (the makefile builds all tools and dlls)
 LIBS = wsock32.lib libiconv.lib libcharset.lib
 !if "$(DEBUG)" == "1"
diff --git a/win32/configure.js b/win32/configure.js
index 7f2f854..1627ace 100644
--- a/win32/configure.js
+++ b/win32/configure.js
@@ -53,6 +53,7 @@ var dirSep = "\\";
 var compiler = "msvc";
 var cruntime = "/MD";
 var vcmanifest = false;
+var buildUWP = 0;
 var buildDebug = 0;
 var buildStatic = 0;
 var buildPrefix = ".";
@@ -112,6 +113,7 @@ function usage()
 	txt += "  compiler:   Compiler to be used [msvc|mingw] (" + compiler + ")\n";
 	txt += "  cruntime:   C-runtime compiler option (only msvc) (" + cruntime + ")\n";
 	txt += "  vcmanifest: Embed VC manifest (only msvc) (" + (vcmanifest? "yes" : "no") + ")\n";
+	txt += "  uwp:        Build Win10 UWP executables (" + (buildUWP? "yes" : "no")  + ")\n";
 	txt += "  debug:      Build unoptimised debug executables (" + (buildDebug? "yes" : "no")  + ")\n";
 	txt += "  static:     Link xsltproc statically to libxslt (" + (buildStatic? "yes" : "no")  + ")\n";
 	txt += "              Note: automatically enabled if cruntime is not /MD or /MDd\n";
@@ -194,6 +196,7 @@ function discoverVersion()
 	vf.WriteLine("WITH_ZLIB=" + (withZlib? "1" : "0"));
 	vf.WriteLine("WITH_CRYPTO=" + (withCrypto? "1" : "0"));
 	vf.WriteLine("WITH_MODULES=" + (withModules? "1" : "0"));
+	vf.WriteLine("BUILD_UWP=" + (buildUWP? "1" : "0"));
 	vf.WriteLine("DEBUG=" + (buildDebug? "1" : "0"));
 	vf.WriteLine("STATIC=" + (buildStatic? "1" : "0"));
 	vf.WriteLine("PREFIX=" + buildPrefix);
@@ -350,7 +353,9 @@ for (i = 0; (i < WScript.Arguments.length) && (error == 0); i++) {
 		else if (opt == "modules")
 			withModules = strToBool(arg.substring(opt.length + 1, arg.length));
 		else if (opt == "locale")
-			withLocale = strToBool(arg.substring(opt.length + 1, arg.length));
+		    withLocale = strToBool(arg.substring(opt.length + 1, arg.length));
+		else if (opt == "buildUWP")
+		    buildUWP = strToBool(arg.substring(opt.length + 1, arg.length));
 		else if (opt == "compiler")
 			compiler = arg.substring(opt.length + 1, arg.length);
  		else if (opt == "cruntime")
@@ -493,6 +498,7 @@ txtOut += "          Compiler: " + compiler + "\n";
 if (compiler == "msvc")
 	txtOut += "  C-Runtime option: " + cruntime + "\n";
 	txtOut += "    Embed Manifest: " + boolToStr(vcmanifest) + "\n";
+txtOut += "         Build UWP: " + boolToStr(buildUWP) + "\n";
 txtOut += "     Debug symbols: " + boolToStr(buildDebug) + "\n";
 txtOut += "   Static xsltproc: " + boolToStr(buildStatic) + "\n";
 txtOut += "    Install prefix: " + buildPrefix + "\n";
