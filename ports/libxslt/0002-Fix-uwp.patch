diff --git a/win32/Makefile.msvc b/win32/Makefile.msvc
index b1fa754..997ceae 100644
--- a/win32/Makefile.msvc
+++ b/win32/Makefile.msvc
@@ -59,6 +59,9 @@ CFLAGS = $(CFLAGS) /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE
 LD = link.exe
 LDFLAGS = /nologo
 LDFLAGS = $(LDFLAGS) /LIBPATH:$(BINDIR) /LIBPATH:$(LIBPREFIX)
+!if "$(WITH_UWP)" == "1"
+LDFLAGS = $(LDFLAGS) /APPCONTAINER
+!endif
 # The libraries are needed for static builds (the makefile builds all tools and dlls)
 LIBS = wsock32.lib libiconv.lib libcharset.lib
 !if "$(DEBUG)" == "1"
diff --git a/win32/configure.js b/win32/configure.js
index 7f2f854..53a6cc0 100644
--- a/win32/configure.js
+++ b/win32/configure.js
@@ -49,6 +49,7 @@ var withCrypto = true;
 var withModules = false;
 var withLocale = true;
 /* Win32 build options. */
+var withUwp = false;
 var dirSep = "\\";
 var compiler = "msvc";
 var cruntime = "/MD";
@@ -100,6 +101,7 @@ function usage()
 	txt += "either 'yes' or 'no'.\n\n";
 	txt += "XSLT processor options, default value given in parentheses:\n\n";
 	txt += "  trio:       Enable TRIO string manipulator (" + (withTrio? "yes" : "no")  + ")\n";
+	txt += "  uwp:        Enable UWP build (" + (withUWP? "yes" : "no")  + ")\n";
 	txt += "  xslt_debug: Enable XSLT debbugging module (" + (withXsltDebug? "yes" : "no")  + ")\n";
 	txt += "  mem_debug:  Enable memory debugger (" + (withMemDebug? "yes" : "no")  + ")\n";
 	txt += "  debugger:   Enable external debugger support (" + (withDebugger? "yes" : "no")  + ")\n";
@@ -187,6 +189,7 @@ function discoverVersion()
 	}
 	cf.Close();
 	vf.WriteLine("WITH_TRIO=" + (withTrio? "1" : "0"));
+	vf.WriteLine("WITH_UWP=" + (withUwp? "1" : "0"));
 	vf.WriteLine("WITH_DEBUG=" + (withXsltDebug? "1" : "0"));
 	vf.WriteLine("WITH_MEM_DEBUG=" + (withMemDebug? "1" : "0"));
 	vf.WriteLine("WITH_DEBUGGER=" + (withDebugger? "1" : "0"));
@@ -234,6 +237,8 @@ function configureXslt()
 			of.WriteLine(s.replace(/\@LIBXSLT_VERSION_EXTRA\@/, verCvs));
 		} else if (s.search(/\@WITH_TRIO\@/) != -1) {
 			of.WriteLine(s.replace(/\@WITH_TRIO\@/, withTrio? "1" : "0"));
+		} else if (s.search(/\@WITH_UWP\@/) != -1) {
+			of.WriteLine(s.replace(/\@WITH_UWP\@/, withUWP == "no"? "0" : "1"));
 		} else if (s.search(/\@WITH_XSLT_DEBUG\@/) != -1) {
 			of.WriteLine(s.replace(/\@WITH_XSLT_DEBUG\@/, withXsltDebug? "1" : "0"));
 		} else if (s.search(/\@WITH_MEM_DEBUG\@/) != -1) {
@@ -335,6 +340,8 @@ for (i = 0; (i < WScript.Arguments.length) && (error == 0); i++) {
 			withXsltDebug = strToBool(arg.substring(opt.length + 1, arg.length));
 		else if (opt == "trio")
 			withTrio = strToBool(arg.substring(opt.length + 1, arg.length));
+        else if (opt == "uwp")
+			withUwp = strToBool(arg.substring(opt.length + 1, arg.length));
 		else if (opt == "mem_debug")
 			withMemDebug = strToBool(arg.substring(opt.length + 1, arg.length));
 		else if (opt == "debugger")
@@ -478,6 +485,7 @@ WScript.Echo("Created config.h.");
 var txtOut = "\nXSLT processor configuration\n";
 txtOut += "----------------------------\n";
 txtOut += "              Trio: " + boolToStr(withTrio) + "\n";
+txtOut += "               UWP: " + boolToStr(withUwp) + "\n";
 txtOut += "  Debugging module: " + boolToStr(withXsltDebug) + "\n";
 txtOut += "  Memory debugging: " + boolToStr(withMemDebug) + "\n";
 txtOut += "  Debugger support: " + boolToStr(withDebugger) + "\n";
